[mysqld]
# 服务器的端口，默认是3306，用于客户端连接服务器时指定的端口号。
port = 3306

# 数据目录，用于存放数据库数据文件的目录，所有数据库的数据文件、表结构文件等都存储在此。
datadir = /opt/mysql/data

# 服务器的唯一标识符，在主从复制等分布式环境中用于区分不同的MySQL服务器节点。
server_id = 1

# 允许同时连接到MySQL服务器的最大客户端连接数，当连接数达到此上限，新连接请求将被拒绝，直到有连接释放。
max_connections = 100

# 每个连接允许传输的最大数据包大小，用于限制客户端与服务器之间传递的SQL语句、数据等的大小，防止过大数据包导致内存溢出等问题。
max_allowed_packet = 16M

# 线程池的大小，用于管理处理客户端连接的线程，提高服务器的并发处理能力。
thread_pool_size = 8

# InnoDB存储引擎的事务日志文件大小，事务日志用于记录数据库的更改操作，以便在数据库崩溃或故障时进行恢复，合适的日志文件大小可提高性能和恢复效率。
innodb_log_file_size = 128M

# 是否启用查询日志（当前配置为关闭状态，如需开启将其设置为 ON），开启后会记录所有查询语句。
# query_log = ON

# 是否启用慢查询日志，开启后会记录执行时间超过指定阈值的SQL查询语句，便于分析性能瓶颈。
slow_query_log = ON
slow_query_log_file = /var/log/mysql/slow_queries.log

# 是否启用通用日志（当前配置为关闭状态，如需开启将其设置为 ON），开启后会记录MySQL服务器的所有活动。
# general_log = ON

# 通用日志文件的存储路径和文件名（当前配置为未启用状态，如需启用需同时开启 general_log 配置项），通用日志记录的相关信息将被记录到这个文件中。
# general_log_file = /var/log/mysql/general.log

# InnoDB存储引擎默认启用，无需显式开启此配置项。
# innodb = ON

# InnoDB存储引擎的缓冲池大小，缓冲池用于缓存数据页和索引页，当数据库进行读写操作时，优先从缓冲池中读取数据，减少磁盘I/O，提高数据库性能。
innodb_buffer_pool_size = 1G

# 是否启用InnoDB数据文件的双写缓冲区（默认开启，可提高数据可靠性），双写缓冲区在数据写入磁盘前先写入一个临时区域，确保数据写入的完整性。
# innodb_doublewrite = ON

# InnoDB使用事务表空间是其特性，默认开启，无需此配置项。以下配置表示使用独立表空间，每个表的数据和索引存放在独立的表空间文件中。
# innodb_use_transaction_tablespaces = ON
innodb_file_per_table = 1

# 是否启用InnoDB的自适应哈希索引，启用后可根据查询模式自动构建哈希索引，加快查询速度，但会占用一定内存空间。
innodb_adaptive_hash_index = ON

# 该配置项名称错误，正确的是 innodb_adaptive_hash_index_parts（这里不配置，使用默认值），用于控制自适应哈希索引的分区数量。
# innodb_adaptive_index_hash_size = 16M

# 是否启用InnoDB的在线DDL操作，开启后在执行表结构变更操作（如添加列、修改列等）时，不会阻塞其他对该表的读写操作。
innodb_online_ddl_operation = ON

# 是否启用InnoDB的数据压缩（当前配置为未启用状态，如需启用需设置合适的压缩级别），可减少数据存储占用空间，但会增加CPU开销。
# innodb_compression_level = 6

# 是否启用InnoDB的数据加密（当前配置为未启用状态，如需启用可提高数据安全性），对数据进行加密存储，防止数据被窃取。
# innodb_encryption = ON

# 是否启用InnoDB的数据校验（默认开启，可验证数据的完整性），在数据读写过程中检查数据是否损坏。
innodb_checksums = ON

# 是否启用InnoDB的数据页校验（默认开启，可进一步提高数据可靠性），对数据页进行校验，确保数据页的正确性。
innodb_page_checksums = ON

# 是否启用InnoDB的严格模式（开启后对数据操作进行更严格的检查），例如插入数据时更严格地检查数据类型和约束条件。
innodb_strict_mode = ON

# 设置InnoDB数据刷写方式，采用直接从内存写入磁盘的方式，提高I/O性能。
innodb_flush_method = O_DIRECT

# 适当增大InnoDB日志缓冲区大小（当前设置为32M），可减少磁盘I/O，提高事务提交性能。
# innodb_log_buffer_size = 16M
innodb_log_buffer_size = 32M

# 设置InnoDB的写I/O线程数，根据服务器性能调整（当前设置为8），用于提高写入数据时的并发处理能力。
innodb_write_io_threads = 8

# 设置InnoDB的读I/O线程数，根据服务器性能调整（当前设置为8），用于提高读取数据时的并发处理能力。
innodb_read_io_threads = 8

# 设置InnoDB的I/O能力，根据磁盘性能设置（当前设置为200），用于控制InnoDB对磁盘I/O的使用效率。
innodb_io_capacity = 200

# 设置InnoDB的最大I/O能力（当前设置为400），当系统负载较高时，InnoDB可使用的最大I/O能力。
innodb_io_capacity_max = 400

# 设置InnoDB的清除操作线程数（当前设置为1），用于清理不再使用的undo日志和历史数据。
innodb_purge_threads = 1

# 是否启用InnoDB的分布式事务支持（默认开启，支持XA事务），用于在分布式环境中保证事务的一致性。
innodb_support_xa = ON

# 设置InnoDB的锁等待超时时间，单位为秒（当前设置为50），当事务等待锁的时间超过此值时，会自动放弃等待并回滚事务。
innodb_lock_wait_timeout = 50

# 是否在事务超时时回滚事务（当前设置为不回滚），当事务执行时间超过innodb_lock_wait_timeout设置的值时，决定是否自动回滚事务。
innodb_rollback_on_timeout = OFF

# InnoDB系统表空间数据文件路径和配置，指定了名为ibdata1的数据文件，初始大小为12M，并且会根据需要自动扩展。
innodb_data_file_path = ibdata1:12M:autoextend

# 设置InnoDB允许的最大脏页比例，超过这个比例会触发刷脏操作（当前设置为75%），将内存中修改过的数据页写入磁盘。
innodb_max_dirty_pages_pct = 75

# 设置InnoDB旧块在缓冲池中停留的时间，单位为毫秒（当前设置为1000），用于控制缓冲池中数据页的淘汰策略。
innodb_old_blocks_time = 1000

# 设置日志目录，用于存放MySQL服务器的各类日志文件。
log-dir = /var/log/mysql

# 设置错误日志文件，MySQL服务器运行过程中的错误信息将记录到此文件中。
log-error = /var/log/mysql/error.log

# 设置pid文件，用于存储MySQL服务器进程的ID，方便管理和监控服务器进程。
pid-file = /var/run/mysqld/mysqld.pid

# 设置mysqld的socket文件，用于本地客户端与MySQL服务器进行通信的套接字文件路径。
socket = /var/run/mysqld/mysqld.sock

# 设置表缓存大小，根据服务器内存和表数量调整（当前设置为4096），用于缓存表结构信息，减少打开表的开销。
table_cache = 4096

# 设置线程缓存大小，缓存空闲线程，减少线程创建开销（当前设置为100），提高服务器处理新连接的性能。
thread_cache_size = 100

# 设置InnoDB缓冲池预热大小，在服务器重启时预热缓冲池（当前设置为256M），加快数据库启动后的性能恢复。
innodb_buffer_pool_preload_size = 256M

# 设置InnoDB的存储格式，当前设置为Barracuda，支持一些高级特性如大文件支持等。
innodb_file_format = Barracuda

# 设置InnoDB的行格式，当前设置为dynamic，采用动态行格式，可更好地处理大字段和数据压缩。
innodb_row_format = dynamic

# 设置InnoDB的redo日志同步模式，设置为1表示每次事务提交时都将redo日志写入磁盘，保证数据的持久性。
innodb_flush_log_at_trx_commit = 1

# 设置InnoDB的redo日志同步频率，设置为1表示每次事务提交时都将redo日志同步到磁盘，保证数据的一致性。
innodb_log_flush_at_trx_commit = 1

# 设置InnoDB的redo日志同步策略，指定每次写入redo日志时的预写大小（当前设置为8M），提高I/O性能。
innodb_log_write_ahead_size = 8M